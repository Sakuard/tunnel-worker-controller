name: Build and Push Docker Images

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '.github/workflows/helm-publish.yml'
      - 'chart/**'
      - 'todo.md'
      - '*.md'
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  version:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    permissions:
      contents: write
    outputs:
      new_tag: ${{ steps.version.outputs.newTag }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Automated Version Bump
      id: version
      uses: phips28/gh-action-bump-version@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag-prefix: 'v'
        default: 'patch'

  build:
    runs-on: ubuntu-latest
    needs: version
    if: github.event_name != 'pull_request'
    strategy:
      matrix:
        image:
          - name: job-manager
            dockerfile: dockerfile.job
            context: .
          - name: cloudflare-tunnel
            dockerfile: dockerfile.tunnel
            context: .
    
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.image.name }}
        tags: |
          type=raw,value=${{ needs.version.outputs.new_tag }}
          type=raw,value=latest

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ${{ matrix.image.context }}
        file: ${{ matrix.image.dockerfile }}
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max